{"version":3,"sources":["Homepage.jsx","Select.jsx","TextArea.jsx","CheckBox.jsx","ReferralWidget.jsx","CampaignWidget.jsx","VipWidget.jsx","WidgetContainer.jsx","NavContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["Homepage","className","Select","props","Form","Group","controlId","name","Label","title","Row","Col","Control","as","onChange","handleChange","style","textTransform","value","options","map","option","ind","key","split","join","TextArea","rows","CheckBox","icon","Check","inline","type","id","label","checked","selectedOptions","indexOf","ReferralWidget","state","titleInput","layoutDropDown","additionalText","submitText","existingUserSubmitText","selectedSocialShareOptions","handleInput","bind","handleSocialCheckbox","e","target","this","setState","newSelectionArray","newSelection","filter","s","Container","textAlign","Component","CampaignWidget","creativeLayoutDropDown","campaignGridLayoutDropDown","lastCampaignLayoutDropDown","loginPromptDropDown","restrictedCampaignsText","restrictedCampaignsArray","VipWidget","vipLayoutDropDown","currentStatusText","isDummyTierRequired","dummyTierName","console","log","WidgetContainer","path","component","NavContainer","Navbar","bg","variant","Brand","Link","to","Nav","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81e64a87.chunk.js","sourcesContent":["import React from 'react';\nimport './Homepage.css'\n\nconst Homepage = () => (\n  <div className='home-page'>\n    <h1>Welcome</h1>\n    <p>Select a widget option from the Navigation menu to begin</p>\n  </div>\n);\n\nexport default Homepage;\n","import React from 'react';\nimport { Form, Row, Col } from 'react-bootstrap';\n\nconst Select = props => {\n  const style = {textTransform:'capitalize'}\n  return (\n    <Form.Group controlId={props.name}>\n      <Form.Label>{props.title}</Form.Label>\n      <Row>\n        <Col>\n          <Form.Control\n            as='select'\n            name={props.name}\n            onChange={props.handleChange}\n            style={style}\n            value={props.value}\n          >\n            {props.options.map((option, ind) => {\n              return (\n                <option key={ind} name={option} value={option}>\n                  {' '}\n                  {option.split('_').join(' ')}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Col>\n      </Row>\n    </Form.Group>\n  );\n};\n\nexport default Select;\n","import React from 'react';\nimport { Form, Row, Col } from 'react-bootstrap';\n\nconst TextArea = props => {\n  return (\n    <Form.Group controlId={props.name}>\n      <Form.Label>{props.title}</Form.Label>\n      <Row>\n        <Col>\n          <Form.Control\n            as='textarea'\n            rows={props.rows}\n            name={props.name}\n            value={props.value}\n            onChange={props.handleChange}\n          />\n        </Col>\n      </Row>\n    </Form.Group>\n  );\n};\n\nexport default TextArea;\n","import React from 'react';\nimport { Form, Row, Col } from 'react-bootstrap';\n\nconst CheckBox = (props) => {\n    return (\n      <Form.Group controlId={props.name}>\n        <Form.Label>{props.title}</Form.Label>\n        <div className='mb-3'>\n          <Row className='justify-content-md-center'>\n            {props.options.map((icon, ind) => (\n              <Col key={ind}>\n                <Form.Check\n                  inline\n                  type='checkbox'\n                  id={`default-icon ${icon}`}\n                  label={icon}\n                  value={icon}\n                  onChange={props.handleChange}\n                  checked={props.selectedOptions.indexOf(icon) > -1}\n                />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Form.Group>\n    );\n}\n\nexport default CheckBox","import React, { Component } from 'react';\nimport { Form, Container } from 'react-bootstrap';\nimport Select from './Select';\nimport TextArea from './TextArea';\nimport CheckBox  from './CheckBox';\n\nclass ReferralWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleInput: 'This is the Title Header',\n      layoutDropDown: 'single_row',\n      additionalText: 'This is the sub-header text.',\n      submitText: 'Submit',\n      existingUserSubmitText: 'Submit',\n      selectedSocialShareOptions: ['facebook'],\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSocialCheckbox = this.handleSocialCheckbox.bind(this);\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      { [name]: value }\n      //() => console.log(this.state)\n    );\n  }\n\n  handleSocialCheckbox(e) {\n    const newSelection = e.target.value;\n    let newSelectionArray;\n\n    if (this.state.selectedSocialShareOptions.indexOf(newSelection) > -1) {\n      newSelectionArray = this.state.selectedSocialShareOptions.filter(\n        s => s !== newSelection\n      );\n    } else {\n      newSelectionArray = [...this.state.selectedSocialShareOptions, newSelection];\n    }\n\n    this.setState({selectedSocialShareOptions: newSelectionArray}\n     // () => console.log(this.state)\n      );\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className='referral-form'>\n          <h1>Referral Widget Creator</h1>\n          <Form>\n            <Select\n              title='Email Input and Submit Button Layout'\n              name='layoutDropDown'\n              handleChange={this.handleInput}\n              options={['single_row', 'double_row']}\n              value={this.state.layoutDropDown}\n            />\n\n            <TextArea\n              title='Form Title'\n              rows='1'\n              name='titleInput'\n              value={this.state.titleInput}\n              handleChange={this.handleInput}\n            />\n\n            <TextArea\n              title='Form Additional Text'\n              rows='3'\n              name='additionalText'\n              value={this.state.additionalText}\n              handleChange={this.handleInput}\n            />\n\n            <TextArea\n              title='Submit Button Text'\n              rows='1'\n              name='submitText'\n              value={this.state.submitText}\n              handleChange={this.handleInput}\n            />\n\n            <TextArea\n              title='Existing User Submit Button Text'\n              rows='1'\n              name='existingUserSubmitText'\n              value={this.state.existingUserSubmitText}\n              handleChange={this.handleInput}\n            />\n\n            <CheckBox\n              title='Social Share Links'\n              name='socialShareOptions'\n              handleChange={this.handleSocialCheckbox}\n              options={['facebook', 'twitter', 'sms', 'copylink', 'message']}\n              selectedOptions={this.state.selectedSocialShareOptions}\n            />\n          </Form>\n\n          <hr />\n\n          <p style={{ textAlign: 'center' }}>\n            <b>Copy your referral widget code below:</b>\n          </p>\n\n          <pre>\n            <code>\n              {`       \n        <div class='swell-referral'\n              data-swell-referral-form-layout=\"${this.state.layoutDropDown}\"\n              data-swell-referral-title=\"${this.state.titleInput}\"\n              data-swell-referral-new-usertitle=\"${this.state.additionalText}\"\n              data-swell-referral-new-user-placeholder=\"\"\n              data-swell-referral-new-user-submit=\"${this.state.submitText}\"\n              data-swell-referral-share-links=\"${this.state.selectedSocialShareOptions}\"\n              data-swell-referral-exist-user-submit=\"${this.state.existingUserSubmitText}\"\n              data-swell-referral-exist-user-placeholder=\"\"\n              data-swell-referral-exist-user-title=\"\"\n              data-swell-referral-share-links-title=\"\"\n              data-swell-referral-popup-copy-link-text=\"\"\n              data-swell-referral-popup-thank-title=\"\"\n              data-swell-referral-popup-thank-text=\"\"\n              data-swell-referral-pre-header=\"\"\n              data-swell-referral-desc=\"\"\n            ></div>\n        `}\n            </code>\n          </pre>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default ReferralWidget;","import React, { Component } from 'react';\nimport { Form, Container } from 'react-bootstrap';\nimport Select from './Select';\nimport TextArea from './TextArea';\n\nclass CampaignWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creativeLayoutDropDown: 'icon',\n      campaignGridLayoutDropDown: '1',\n      lastCampaignLayoutDropDown: 'streched',\n      loginPromptDropDown: 'true',\n      restrictedCampaignsText: 'null'\n    };\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState({ [name]: value });  \n  }\n\n  render() {\n    let restrictedCampaignsArray = this.state.restrictedCampaignsText.split(' ').join(',');\n    return (\n      <Container>\n        <div className='swell-campaigns'>\n          <h1>Campaigns Widget Creator</h1>\n          <Form>\n            <Select\n              title='Creative Layout'\n              name='creativeLayoutDropDown'\n              handleChange={this.handleInput}\n              options={['icon', 'backgroung_image']}\n              value={this.state.creativeLayoutDropDown}\n            />\n            <Select\n              title='Campaign Grid Layout'\n              name='campaignGridLayoutDropDown'\n              handleChange={this.handleInput}\n              options={['1', '2', '3']}\n              value={this.state.campaignGridLayoutDropDown}\n            />\n            <Select\n              title='Last Campaign Layout'\n              name='lastCampaignLayoutDropDown'\n              handleChange={this.handleInput}\n              options={['streched', 'null']}\n              value={this.state.lastCampaignLayoutDropDown}\n            />\n            <Select\n              title='Login Prompt'\n              name='loginPromptDropDown'\n              handleChange={this.handleInput}\n              options={['true', 'false']}\n              value={this.state.loginPromptDropDown}\n            />\n            <TextArea\n              title='Restricted Campaigns'\n              rows='1'\n              name='restrictedCampaignsText'\n              value={this.state.restrictedCampaignsText}\n              handleChange={this.handleInput}\n            />\n          </Form>\n          <hr />\n\n          <p style={{ textAlign: 'center' }}>\n            <b>Copy your referral widget code below:</b>\n          </p>\n\n          <pre>\n            <code>\n              {`       \n            <div class='swell-campaigns'\n                data-swell-creative-layout=\"${this.state.creativeLayoutDropDown}\"\n                data-swell-campaign-grid-layout=\"${this.state.campaignGridLayoutDropDown}\"\n                data-swell-last-campaign-layout=\"${this.state.lastCampaignLayoutDropDown}\"\n                data-swell-login-prompt=\"${this.state.loginPromptDropDown}\"\n                data-swell-restricted-campaigns=\"${restrictedCampaignsArray}\"\n            ></div>\n            `}\n            </code>\n          </pre>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default CampaignWidget;\n","import React, { Component } from 'react';\nimport { Form, Container } from 'react-bootstrap';\nimport Select from './Select';\nimport TextArea from './TextArea';\n\nclass VipWidget extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vipLayoutDropDown: 'table',\n      currentStatusText: 'Current State',\n      isDummyTierRequired: 'true',\n      dummyTierName: 'Name Here'\n    };\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState({ [name]: value }, () => console.log(this.state));\n  }\n\n  render() {\n    return (\n      <Container>\n        <div className='referral-form'>\n          <h1>Referral Widget Creator</h1>\n          <Form>\n            <Select\n              title='VIP Layout'\n              name='layoutDropDown'\n              handleChange={this.handleInput}\n              options={['table']}\n              value={this.state.vipLayoutDropDown}\n            />\n\n            <TextArea\n              title='Current Status Text'\n              rows='1'\n              name='currentStatusText'\n              value={this.state.currentStatusText}\n              handleChange={this.handleInput}\n            />\n\n            <Select\n              title='Is a Dummy Tier Required'\n              name='isDummyTierRequired'\n              handleChange={this.handleInput}\n              options={['true', 'false']}\n              value={this.state.isDummyTierRequired}\n            />\n\n            <TextArea\n              title='Dummy Tier Name'\n              rows='1'\n              name='dummyTierName'\n              value={this.state.dummyTierName}\n              handleChange={this.handleInput}\n            />\n          </Form>\n\n          <hr />\n\n          <p style={{ textAlign: 'center' }}>\n            <b>Copy your referral widget code below:</b>\n          </p>\n          <pre>\n            <code>\n              {`       \n                <div class=\"swell-vip-tiers\"\n                data-swell-vip-layout=\"${this.state.vipLayoutDropDown}\"\n                data-swell-current-status-text=\"${this.state.currentStatusText}\"\n                data-swell-dummy-tier-required=\"${this.state.isDummyTierRequired}\"\n                data-swell-dummy-tier-name=\"${this.state.dummyTierName}\"\n                data-swell-tier-condition=\"swellrequiredPointsEarned\"\n                data-swell-customer-currency=\"$\"\n                data-swell-checked-icon=\"⬤\"\n                data-swell-benefits-list=\"row1:text1,text2,text3;row2:swellCheckIcon,text5,text6;row3:swellCheckIcon,text8,swellCheckIcon\"\n                ></div>\n              `}\n            </code>\n          </pre>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default VipWidget;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Homepage from './Homepage';\nimport ReferralWidget from './ReferralWidget';\nimport CampaignWidget from './CampaignWidget';\nimport VipWidget from './VipWidget';\n\nconst WidgetContainer = () => (\n  <Switch>\n    <Route path='/referral' component={ReferralWidget} />\n    <Route path='/campaign' component={CampaignWidget} />\n    <Route path='/vip' component={VipWidget} />\n    <Route path='/' component={Homepage} />\n  </Switch>\n);\n\nexport default WidgetContainer;\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { Navbar, Nav } from 'react-bootstrap';\n\nconst NavContainer = () => (\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand as={Link} to=\"/\"> Navbar</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link as={Link} to=\"/referral\">Referral</Nav.Link>\n          <Nav.Link as={Link} to=\"/campaign\">Campaign</Nav.Link>\n          <Nav.Link as={Link} to=\"/vip\">VIP</Nav.Link>\n        </Nav>\n      </Navbar>\n    );\n\nexport default NavContainer;","import React from 'react';\nimport './App.css';\nimport WidgetContainer from './WidgetContainer';\nimport NavContainer from './NavContainer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavContainer />\n      <WidgetContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}