{"ast":null,"code":"var _jsxFileName = \"/Users/eyalchistik/FrontEnd/swell_ps_react_frontend/swell-component-menu/src/Referral.jsx\";\nimport React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass Referral extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: 'Swell Widgets Rule',\n      layoutDropDown: 'single_row'\n    };\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(prevState => {\n      return {\n        [name]: value\n      };\n    } //() => console.log(this.state)\n    );\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"referral-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Referral Widget Creator\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Email Input and Submit Button Layout\"), React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"layoutDropDown\",\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      key: \"1\",\n      name: \"single-row\",\n      value: \"single_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"1 Row Inline\"), React.createElement(\"option\", {\n      key: \"2\",\n      name: \"double-row\",\n      value: \"double_row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"2 Rows\"))), React.createElement(Form.Group, {\n      controlId: \"title-input\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Form Title\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"1\",\n      name: \"titleInput\",\n      value: this.state.titleInput,\n      onChange: this.titleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Form Additional Text\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      placeholder: \"Swell rules. Everyone loves it. duh.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submit Button Text\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"1\",\n      placeholder: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Existing User Submit Button Text\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"1\",\n      placeholder: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlTextarea4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Social Share Links\"), React.createElement(\"div\", {\n      key: `default-checkbox`,\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, ['facebook', 'twitter', 'sms', 'copylink', 'message'].map(icon => React.createElement(Form.Check, {\n      inline: true,\n      type: \"checkbox\",\n      id: `default-icon ${icon}`,\n      label: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Copy your referral widget code below:\")), React.createElement(\"pre\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, `\n          <div\n            className='swell-referral'\n            data-formLayout='${this.state.layoutDropDown}'\n            data-title=\"${this.state.titleInput}\"\n            data-explain=\"Swell rules. Everyone loves it.\"\n            data-new-user-submit=\"Go\"\n            shareLinks='facebook,twitter,sms,copylink,message'\n            data-exist-user-submit=\"Start\"\n            data-exist-userplaceholder=\"\"\n          ></div>\n        `)));\n  }\n\n}\n\nexport default Referral;","map":{"version":3,"sources":["/Users/eyalchistik/FrontEnd/swell_ps_react_frontend/swell-component-menu/src/Referral.jsx"],"names":["React","Component","Form","Referral","constructor","props","state","inputText","layoutDropDown","handleInput","bind","e","value","target","name","setState","prevState","render","titleInput","map","icon","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form } from 'react-bootstrap';\n\nclass Referral extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { inputText: 'Swell Widgets Rule', layoutDropDown:'single_row' };\n\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput(e) {\n    let value = e.target.value;\n    let name = e.target.name;\n    this.setState(\n      prevState => {\n        return {\n            [name]: value\n        };\n      },\n      //() => console.log(this.state)\n    );\n  }\n\n  render() {\n    return (\n      <div className='referral-form'>\n        <h1>Referral Widget Creator</h1>\n        <Form>\n          <Form.Group controlId='exampleForm.ControlSelect1'>\n            <Form.Label>Email Input and Submit Button Layout</Form.Label>\n            <Form.Control\n              as='select'\n              name='layoutDropDown'\n              onChange={this.handleInput}\n            >\n              <option key='1' name='single-row' value='single_row'>\n                1 Row Inline\n              </option>\n              <option key='2' name='double-row' value='double_row'>\n                2 Rows\n              </option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId='title-input'>\n            <Form.Label>Form Title</Form.Label>\n            <Form.Control\n              as='textarea'\n              rows='1'\n              name='titleInput'\n              value={this.state.titleInput}\n              onChange={this.titleInput}\n            />\n          </Form.Group>\n          <Form.Group controlId='exampleForm.ControlTextarea2'>\n            <Form.Label>Form Additional Text</Form.Label>\n            <Form.Control\n              as='textarea'\n              rows='3'\n              placeholder='Swell rules. Everyone loves it. duh.'\n            />\n          </Form.Group>\n          <Form.Group controlId='exampleForm.ControlTextarea3'>\n            <Form.Label>Submit Button Text</Form.Label>\n            <Form.Control as='textarea' rows='1' placeholder='Submit' />\n          </Form.Group>\n          <Form.Group controlId='exampleForm.ControlTextarea5'>\n            <Form.Label>Existing User Submit Button Text</Form.Label>\n            <Form.Control as='textarea' rows='1' placeholder='Submit' />\n          </Form.Group>\n          <Form.Group controlId='exampleForm.ControlTextarea4'>\n            <Form.Label>Social Share Links</Form.Label>\n            <div key={`default-checkbox`} className='mb-3'>\n              {['facebook', 'twitter', 'sms', 'copylink', 'message'].map(\n                icon => (\n                  <Form.Check\n                    inline\n                    type='checkbox'\n                    id={`default-icon ${icon}`}\n                    label={icon}\n                  />\n                )\n              )}\n            </div>\n          </Form.Group>\n        </Form>\n        <hr />\n        <p style={{ textAlign: 'center' }}>\n          <b>Copy your referral widget code below:</b>\n        </p>\n        <pre>\n          <code>\n            {`\n          <div\n            className='swell-referral'\n            data-formLayout='${this.state.layoutDropDown}'\n            data-title=\"${this.state.titleInput}\"\n            data-explain=\"Swell rules. Everyone loves it.\"\n            data-new-user-submit=\"Go\"\n            shareLinks='facebook,twitter,sms,copylink,message'\n            data-exist-user-submit=\"Start\"\n            data-exist-userplaceholder=\"\"\n          ></div>\n        `}\n          </code>\n        </pre>\n      </div>\n    );\n  }\n}\n\nexport default Referral;\n"]},"metadata":{},"sourceType":"module"}